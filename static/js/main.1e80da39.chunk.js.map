{"version":3,"sources":["components/Cards/Cards.module.css","components/Cards/Cards.jsx","api/index.js","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","App.js","index.js","components/Chart/Chart.module.css","App.module.css"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","className","styles","container","Grid","spacing","justify","item","component","Card","xs","md","cx","card","infected","CardContent","style","color","Typography","gutterBottom","variant","start","end","value","duration","separator","Date","toDateString","url","fetchData","country","a","urll","axios","get","modData","console","log","fetchDailyData","modifData","map","dailyData","total","date","reportDate","fetchCountries","countries","name","Chart","useState","setDailyData","useEffect","fetchApi","lineChart","length","labels","datasets","label","borderColor","backgroundColor","fill","barChart","options","legend","display","title","text","CountryPicker","handleCountryChange","fetchedCountries","setFetchedCountries","fetchAPI","FormControl","formControl","NativeSelect","default","onChange","e","target","i","key","App","state","fetchedData","setState","this","textAlign","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1e80da39.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__3bjn6\",\"card\":\"Cards_card__eGUfZ\",\"infected\":\"Cards_infected__-adYp\",\"recovered\":\"Cards_recovered__1aizD\",\"deaths\":\"Cards_deaths__Qdjzq\"};","import React from 'react';\nimport {Card , CardContent , Typography , Grid} from '@material-ui/core';\nimport CountUp from 'react-countup';\nimport styles from './Cards.module.css';\nimport cx from 'classnames'\nconst Cards = ( {data : { confirmed,recovered,deaths,lastUpdate } }) => {\n    if(!confirmed){\n        return 'loading...';\n    }\n   // console.log(lastUpdate);\n    return (\n        <div className={styles.container}>\n        <Grid container spacing={3} justify=\"center\" >\n         <Grid item component={Card} xs={12} md={3} className={cx(styles.card,styles.infected)} >\n         <CardContent style={{color:'blue'}}>\n         <Typography color=\"textPrimary\" gutterBottom>Infected People</Typography>\n         <Typography variant=\"h5\">\n         <CountUp start={0} end={confirmed.value} duration={1.5} separator=\",\"/>\n         </Typography>   \n         <h5 style={{color:\"grey\"}}>As fetched on: {new Date(lastUpdate).toDateString()}</h5>                                        \n         {/* <Typography variant=\"body2\">No of infected people</Typography> */}\n         </CardContent>\n         </Grid>\n         <Grid item component={Card} xs={12} md={3} className={cx(styles.card,styles.recovered)} >\n         <CardContent style={{color:'green'}}>\n         <Typography color=\"textPrimary\" gutterBottom>Recovered People</Typography>\n         <Typography variant=\"h5\">\n         <CountUp start={0} end={recovered.value} duration={1.5} separator=\",\"/>\n         </Typography>\n         <h5 style={{color:\"grey\"}}>As fetched on: {new Date(lastUpdate).toDateString()}</h5>                                        \n         {/* <Typography variant=\"body2\">No of recovered</Typography> */}\n         </CardContent>\n         </Grid>\n         <Grid item component={Card} xs={12} md={3} className={cx(styles.card,styles.deaths)} >\n         <CardContent style={{color:'red'}}>\n         <Typography color=\"textPrimary\" gutterBottom>Deaths</Typography>\n         <Typography variant=\"h5\">\n         <CountUp start={0} end={deaths.value} duration={1.5} separator=\",\"/>\n         </Typography>\n         <h5 style={{color:\"grey\"}}>As fetched on: {new Date(lastUpdate).toDateString()}</h5>                                        \n         {/* <Typography variant=\"body2\">No of casualties</Typography> */}\n         </CardContent>\n         </Grid>                      \n        </Grid>\n        </div>\n    );\n}\nexport default Cards;","import axios from 'axios';\nconst url = 'https://covid19.mathdro.id/api';\n\nexport const fetchData = async(country) => {\n    let urll = url;\n    if(country){\n        urll = `${url}/countries/${country}`;\n    }    \n    try{\n       // console.log(country)\n        const {data} = await axios.get(urll);\n        const modData = {\n            confirmed : data.confirmed,\n            recovered : data.recovered,\n            deaths : data.deaths,\n            lastUpdate : data.lastUpdate               \n        }\n        return modData;\n    }\n    catch(error){\n        console.log(error);\n    }\n}\n\nexport const fetchDailyData = async() => {\n    try{\n        const {data} = await axios.get(`${url}/daily`);\n        \n        const modifData = data.map( (dailyData) => ({\n            confirmed : dailyData.confirmed.total,\n            deaths : dailyData.deaths.total,\n            date : dailyData.reportDate\n        }));\n        return modifData;\n       // console.log(data);\n    }\n    catch(error){\n        \n    }\n}\nexport const fetchCountries = async() => {\n    try{\n        const { data : {countries} } = await axios.get(`${url}/countries`);\n        \n        // const modifData = data.map( (dailyData) => ({\n        //     confirmed : dailyData.confirmed.total,\n        //     deaths : dailyData.deaths.total,\n        //     date : dailyData.reportDate\n        // }));\n        // return modifData;\n        return countries.map( (country) => country.name );\n        //console.log(res);\n    }\n    catch(error){\n        console.log(error);\n    }\n}","import React , {useState , useEffect} from 'react';\nimport {fetchDailyData} from '../../api';\nimport {Line,Bar} from 'react-chartjs-2';\nimport styles from './Chart.module.css';\n\nconst Chart = ( { data : { confirmed,deaths,recovered } , country } ) => {\n    const [ dailyData , setDailyData ] = useState([]);\n    \n    useEffect( () =>{\n        const fetchApi = async () => {\n            setDailyData(await fetchDailyData());         \n        }   \n       // console.log(dailyData);\n        fetchApi();\n    } ,[]);        \n    const lineChart = (\n        dailyData.length ? \n        (<Line \n              data={{\n                  labels: dailyData.map( ({date}) => date ),\n                  datasets: [{\n                      data: dailyData.map( ({confirmed}) =>confirmed ),\n                      label: 'Infected',\n                      borderColor: '#3333ff',\n                      backgroundColor:'rgba(0, 119, 255, 0.5)',\n                      fill: true\n                  },{  data: dailyData.map( ({deaths}) => deaths ),\n                  label: 'Deaths',\n                  borderColor: 'red',\n                  backgroundColor: 'rgba(255, 115, 115, 0.5)',\n                  fill:true,                    \n              }]\n              }}\n            />) : null\n        );\n        // console.log('ANSWER :- \\n')\n        if(confirmed)console.log(confirmed.value);\n        // console.log(confirmed , recovered , deaths)\n        const barChart = (\n            confirmed ? (\n              <Bar\n                data={{\n                  labels: ['Infected', 'Recovered', 'Deaths'],\n                  datasets: [\n                    {\n                      label: 'People',\n                      backgroundColor: ['rgba(0, 0, 255, 0.5)', 'rgba(0, 255, 0, 0.5)', 'rgba(255, 0, 0, 0.5)'],\n                      data: [confirmed.value, recovered.value, deaths.value],\n                    },\n                  ],\n                }}\n                options={{\n                  legend: { display: false },\n                  title: { display: true, text: `Current state in ${country}` },\n                }}\n              />\n            ) : null\n          );\n\n    return (\n        <div className={styles.container} >\n        {country ? barChart : lineChart }\n\n        </div>\n    );\n}\nexport default Chart;","import React, {useState,useEffect} from 'react';\nimport {NativeSelect , FormControl } from '@material-ui/core';\nimport styles from './CountryPicker.module.css';\nimport {fetchCountries} from '../../api';\n\nconst CountryPicker = ( {handleCountryChange} ) => {\n    const [fetchedCountries , setFetchedCountries] = useState([]);\n    \n    useEffect( () =>{\n        const fetchAPI = async () =>{\n            setFetchedCountries( await fetchCountries() ); \n        }\n        \n        fetchAPI();\n    } , [] );\n   // console.log(fetchedCountries);\n    \n    return (\n        <FormControl className={styles.formControl} >\n        <NativeSelect default=\"\" onChange={(e) => handleCountryChange(e.target.value) } > \n        <option value=\"\">Country</option>\n    {fetchedCountries.map( (country , i) => <option key={i} value={country}>{country}</option> )}\n        </NativeSelect>\n        </FormControl>\n    );\n}\nexport default CountryPicker;","import React from 'react';\nimport Cards from './components/Cards/Cards';\nimport Chart from './components/Chart/Chart';\nimport CountryPicker from './components/CountryPicker/CountryPicker';\nimport styles from './App.module.css';\nimport {fetchData} from './api';\n\nclass App extends React.Component {\n    state = {\n        data : {},\n        country: ''\n    }\n    async componentDidMount(){\n        const fetchedData = await fetchData();\n        this.setState({ data : fetchedData })\n    }\n    \n    handleCountryChange = async (country) => {\n        //fetch data \n        //then set state\n        //console.log(country)\n        const fetchedData = await fetchData(country);\n        this.setState({ data : fetchedData ,\n                       country: country\n                       })\n        console.log(fetchedData);\n    }\n    render(){\n        const {data ,country} = this.state\n        return(\n            <div className={styles.container}>\n            <h1 style={{textAlign:\"center\",backgroundColor:\"black\"}} >\n            <span style={{color:\"ivory\",}}>COVID</span><span style={{color:\"grey\"}}>-19</span>\n            </h1> \n            <Cards data={data}/>\n            <CountryPicker handleCountryChange={this.handleCountryChange} />                       \n            <Chart data={data} country={country} />\n            </div>\n        );\n    }\n};\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render( <App />, document.getElementById('root') );","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__1PIOn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1MQN3\"};"],"sourceRoot":""}